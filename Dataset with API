import requests

BASE_URL = "http://127.0.0.1:2336"


def get_device_info(serial_number=None, device_id=None):
    """Получает информацию об устройстве по серийному номеру или ID."""
    endpoint = f"{BASE_URL}/getDeviceInfo"
    params = {}

    if serial_number:
        params["sn"] = serial_number.lower()  # Используем 'sn' вместо 'SN'
    if device_id is not None:
        params["id"] = device_id  # Используем 'id' вместо 'index'

    try:
        response = requests.get(endpoint, params=params)
        response.raise_for_status()
        device_info = response.json()

        if device_info.get("result") == False:
            print("⚠️ Сервер вернул ошибку:", device_info.get("error"))
        else:
            print("✅ Информация об устройстве:", device_info)
        return device_info

    except requests.exceptions.RequestException as e:
        print("❌ Ошибка запроса:", e)
        return None


import requests
from typing import Optional, Dict

BASE_URL = "http://127.0.0.1:2336"


def get_concentration() -> Optional[Dict]:
    """
    Получает текущее значение концентрации от NeuroPlayPro.
    Возвращает:
    - словарь с данными (если успешно)
    - None (при ошибке соединения)

    Пример успешного ответа:
    {
        "command": "concentration",
        "concentration": 75.2,  # текущий процент концентрации
        "time": "2025.07.10-16.45.30.123",  # метка времени
        "result": True
    }
    """
    endpoint = f"{BASE_URL}/concentration"

    try:
        response = requests.get(
            endpoint,
            timeout=5  # таймаут 5 секунд
        )
        response.raise_for_status()
        data = response.json()

        # Проверяем структуру ответа
        if not isinstance(data, dict):
            print("⚠️ Некорректный формат ответа сервера")
            return None

        if data.get("result") is False:
            print(f"⚠️ Ошибка устройства: {data.get('error', 'Unknown error')}")
            return None

        concentration = data.get("concentration")
        if concentration is None:
            print("⚠️ В ответе отсутствует значение концентрации")
            return None

        if concentration == -1:
            print("Устройство недоступно")

        print(f"Концентрация: {concentration}% (время: {data.get('time')})")
        return data

    except requests.exceptions.Timeout:
        print("❌ Таймаут соединения (сервер не ответил за 5 секунд)")
    except requests.exceptions.RequestException as e:
        print(f"❌ Ошибка соединения: {e}")
    except ValueError as e:
        print(f"❌ Ошибка парсинга JSON: {e}")
    return None


concentration_data = get_concentration()
if concentration_data:
    print("Детали:", concentration_data)
